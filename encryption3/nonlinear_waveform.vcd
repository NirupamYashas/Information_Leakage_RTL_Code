$date
	Sun Dec 10 15:58:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_nonlinear_encryption_module $end
$var wire 8 ! data_out [7:0] $end
$var parameter 32 " N $end
$var reg 8 # data_in [7:0] $end
$var reg 8 $ expected_data_out [7:0] $end
$var reg 8 % key [7:0] $end
$scope function calculate_expected_output $end
$var reg 8 & data [7:0] $end
$var reg 8 ' intermediate [7:0] $end
$var reg 8 ( k [7:0] $end
$var integer 32 ) i [31:0] $end
$upscope $end
$scope module uut $end
$var wire 8 * data_in [7:0] $end
$var wire 8 + key [7:0] $end
$var parameter 32 , N $end
$var reg 8 - data_out [7:0] $end
$var reg 8 . intermediate [7:0] $end
$var integer 32 / i [31:0] $end
$upscope $end
$scope task perform_test $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 ,
b1000 "
$end
#0
$dumpvars
b1000 /
b1010101 .
b11111111 -
b11111111 +
b10101010 *
b1000 )
b11111111 (
b1010101 '
b10101010 &
b11111111 %
b11111111 $
b10101010 #
b11111111 !
$end
#10000
b1010101 !
b1010101 -
b1000 /
b1010101 $
b1000 )
b1010101 &
b0 (
b0 %
b0 +
b1010101 #
b1010101 *
#20000
b10101010 !
b10101010 -
b10101010 .
b1000 /
b10101010 $
b10101010 '
b1000 )
b0 &
b10101010 (
b10101010 %
b10101010 +
b0 #
b0 *
#30000
b11111111 !
b11111111 -
b1000 /
b11111111 $
b1000 )
b11111111 &
b1010101 (
b1010101 %
b1010101 +
b11111111 #
b11111111 *
#40000
b111001 !
b111001 -
b10110001 .
b1000 /
b111001 $
b10110001 '
b1000 )
b11011 &
b10101010 (
b10101010 %
b10101010 +
b11011 #
b11011 *
#50000
b10010010 !
b10010010 -
b11110011 .
b1000 /
b10010010 $
b11110011 '
b1000 )
b10010110 &
b1100101 (
b1100101 %
b1100101 +
b10010110 #
b10010110 *
#60000
b1010100 !
b1010100 -
b1010100 .
b1000 /
b1010100 $
b1010100 '
b1000 )
b1 &
b1010101 (
b1010101 %
b1010101 +
b1 #
b1 *
#70000
b1010110 !
b1010110 -
b1010111 .
b1000 /
b1010110 $
b1010111 '
b1000 )
b10 &
b10 #
b10 *
#80000
